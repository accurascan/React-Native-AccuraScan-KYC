buildscript {
  repositories {
    google()
    mavenLocal()
    mavenCentral()
    jcenter()
    maven { url 'https://jitpack.io' }
  }

  dependencies {
    classpath "com.android.tools.build:gradle:7.2.1"
  }
}

def isNewArchitectureEnabled() {
  return rootProject.hasProperty("newArchEnabled") && rootProject.getProperty("newArchEnabled") == "true"
}

apply plugin: "com.android.library"


def appProject = rootProject.allprojects.find { it.plugins.hasPlugin('com.android.application') }

if (isNewArchitectureEnabled()) {
  apply plugin: "com.facebook.react"
}

def getExtOrDefault(name) {
  return rootProject.ext.has(name) ? rootProject.ext.get(name) : project.properties["AccurascanKyc_" + name]
}

def getExtOrIntegerDefault(name) {
  return rootProject.ext.has(name) ? rootProject.ext.get(name) : (project.properties["AccurascanKyc_" + name]).toInteger()
}

android {
  compileSdkVersion getExtOrIntegerDefault("compileSdkVersion")

  defaultConfig {
    minSdkVersion getExtOrIntegerDefault("minSdkVersion")
    targetSdkVersion getExtOrIntegerDefault("targetSdkVersion")
    buildConfigField "boolean", "IS_NEW_ARCHITECTURE_ENABLED", isNewArchitectureEnabled().toString()
  }
  buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
  }

  lintOptions {
    disable "GradleCompatible"
  }

  compileOptions {
    sourceCompatibility JavaVersion.VERSION_1_8
    targetCompatibility JavaVersion.VERSION_1_8
  }

  packagingOptions {
    pickFirst 'lib/arm64-v8a/libcrypto.so'
    pickFirst 'lib/arm64-v8a/libssl.so'
 
    pickFirst 'lib/armeabi-v7a/libcrypto.so'
    pickFirst 'lib/armeabi-v7a/libssl.so'
 
    pickFirst 'lib/x86/libcrypto.so'
    pickFirst 'lib/x86/libssl.so'
 
    pickFirst 'lib/x86_64/libcrypto.so'
    pickFirst 'lib/x86_64/libssl.so'
  }
  splits {
      abi {
          reset()
          universalApk false  // If true, also generate a universal APK
          include "armeabi-v7a", "x86", "arm64-v8a", "x86_64"
          // include "armeabi-v7a", "x86"
      }
  }

}

repositories {
  mavenCentral()
  google()
}


dependencies {
  // For < 0.71, this will be from the local maven repo
  // For > 0.71, this will be replaced by `com.facebook.react:react-android:$version` by react gradle plugin
  //noinspection GradleDynamicVersion
  implementation "com.facebook.react:react-native:+"
  implementation fileTree(dir: 'libs', include: ['*.jar'])
  implementation 'androidx.appcompat:appcompat:1.6.0'
  implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
 // Update OCR
  implementation 'com.github.accurascan:AccuraOCR:6.1.3'
 // FaceMatch has no issue
  implementation 'com.github.accurascan:AccuraFaceMatch:3.2.5'
 // Update Liveness
  implementation 'com.github.accurascan:Liveness-Android:3.3.1.1'
  implementation 'com.squareup.picasso:picasso:2.71828'
}

if (isNewArchitectureEnabled()) {
  react {
    jsRootDir = file("../src/")
    libraryName = "AccurascanKyc"
    codegenJavaPackageName = "com.accurascankyc"
  }
}
